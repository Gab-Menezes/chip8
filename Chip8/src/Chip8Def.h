#ifndef CHIP8DEF_H
#define CHIP8DEF_H

#include <stdint.h>

//Defines
#define MEMORY_SIZE 4096
#define STACK_SIZE 16
#define NUM_REGISTERS 16
#define NUM_KEYS 16
#define FONTSET_SIZE 80
#define FONTSET_START_ADDRESS 0x50

#define PROGRAM_COUNTER_START 0x200

#define PROGRAM_START 0x200
#define PROGRAM_END 0xFFF

#define FLAG_LOCATION 0xF

#define WIDTH 64
#define HEIGHT 32

//Fontes padroes do chip8
const static uint8_t fontset[FONTSET_SIZE] = {
		0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
		0x20, 0x60, 0x20, 0x20, 0x70, // 1
		0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
		0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
		0x90, 0x90, 0xF0, 0x10, 0x10, // 4
		0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
		0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
		0xF0, 0x10, 0x20, 0x40, 0x40, // 7
		0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
		0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
		0xF0, 0x90, 0xF0, 0x90, 0x90, // A
		0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
		0xF0, 0x80, 0x80, 0x80, 0xF0, // C
		0xE0, 0x90, 0x90, 0x90, 0xE0, // D
		0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
		0xF0, 0x80, 0xF0, 0x80, 0x80  // F
};

typedef struct 
{
	uint8_t memory[MEMORY_SIZE];		//4kb de memoria
	uint16_t stack[STACK_SIZE];			//Stack

	//registros 
	uint8_t registers[NUM_REGISTERS];	//Registros gerais (0 - 14) Registro de flag (15)
	uint16_t index;						//Index
	uint16_t pc;						//Program counter
	uint8_t sp;							//Stack pointer

	//timers
	uint8_t delay_timer;
	uint8_t sound_timer;

	uint16_t opcode;					// codigo atual da operacao

	//tela
	uint32_t screen[WIDTH*HEIGHT];

	//teclado (16)
	uint8_t keyboard[NUM_KEYS];
} Chip8;

#endif // !CHIP8DEF_H
